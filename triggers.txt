	--trigger for customer_return  

DELIMITER $$

CREATE TRIGGER trg_handle_customer_return
AFTER INSERT ON customer_returns
FOR EACH ROW
BEGIN
    DECLARE v_product_id INT;

    -- Get product_id from bill detail
    SELECT product_id INTO v_product_id
    FROM customer_bill_details
    WHERE Bill_detail_ID = NEW.bill_detail_id;

    IF NEW.action_taken = 'Refunded' THEN
        -- Add returned item back to stock
        UPDATE inventory
        SET quantity_in_stock = quantity_in_stock + NEW.quantity_returned
        WHERE product_id = v_product_id;
    END IF;
END$$

DELIMITER ;








DELIMITER $$

CREATE TRIGGER trg_deduct_stock_on_sale
AFTER INSERT ON customer_bill_details
FOR EACH ROW
BEGIN
  IF NEW.product_id IS NOT NULL THEN
    UPDATE inventory
    SET quantity_in_stock = quantity_in_stock - NEW.quantity
    WHERE product_id = NEW.product_id;
  END IF;
END$$

DELIMITER ;






DELIMITER $$

CREATE TRIGGER trg_update_customer_pending_amount
AFTER INSERT ON customerpayments
FOR EACH ROW
BEGIN
  UPDATE customerpayments
  SET pending_amount = (
    SELECT total_price - IFNULL(SUM(Payed_amount), 0)
    FROM customerpayments
    WHERE customer_BillID = NEW.customer_BillID
  )
  WHERE c_payment_id = NEW.c_payment_id;
END$$

DELIMITER ;







DELIMITER $$

CREATE TRIGGER trg_set_customer_payment_status
AFTER INSERT ON customerpayments
FOR EACH ROW
BEGIN
  DECLARE total INT DEFAULT 0;
  DECLARE paid INT DEFAULT 0;

  SELECT total_price INTO total FROM customerbills WHERE BillID = NEW.customer_BillID;
  SELECT IFNULL(SUM(Payed_amount), 0) INTO paid FROM customerpayments WHERE customer_BillID = NEW.customer_BillID;

  IF paid >= total THEN
    UPDATE customerbills SET payment_status = 'Paid' WHERE BillID = NEW.customer_BillID;
  ELSE
    UPDATE customerbills SET payment_status = 'Due' WHERE BillID = NEW.customer_BillID;
  END IF;
END$$

DELIMITER ;





DELIMITER $$

CREATE TRIGGER trg_update_customer_bill_total
AFTER INSERT ON customer_bill_details
FOR EACH ROW
BEGIN
  UPDATE customerbills
  SET total_price = (
    SELECT SUM((1 - (discount / 100)) * quantity * (
      SELECT sale_price FROM inventory WHERE product_id = NEW.product_id
    ))
    FROM customer_bill_details
    WHERE Bill_id = NEW.Bill_id
  )
  WHERE BillID = NEW.Bill_id;
END$$

DELIMITER ;




DELIMITER $$

CREATE TRIGGER trg_prevent_negative_inventory
BEFORE INSERT ON customer_bill_details
FOR EACH ROW
BEGIN
  DECLARE stock INT;

  SELECT quantity_in_stock INTO stock
  FROM inventory
  WHERE product_id = NEW.product_id;

  IF stock IS NULL OR stock < NEW.quantity THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'Not enough stock to complete sale.';
  END IF;
END$$

DELIMITER ;





DELIMITER $$

CREATE TRIGGER trg_auto_set_warranty_till
BEFORE INSERT ON customer_bill_details
FOR EACH ROW
BEGIN
  IF NEW.warranty IS NOT NULL AND NEW.warranty_from IS NOT NULL THEN
    SET NEW.warranty_till = DATE_ADD(NEW.warranty_from, INTERVAL CAST(NEW.warranty AS UNSIGNED) MONTH);
  END IF;
END$$

DELIMITER ;









